name: CI-CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Python Setup
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - name: Install poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - name: Install Shellcheck
        run: sudo apt-get install shellcheck

      - name: Install Dependencies
        run: |
          source $HOME/.poetry/env
          poetry install

      - name: Lint
        run: |
          source $HOME/.poetry/env
          sh tasks/lint.sh

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Python Setup
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - name: Install Shellcheck
        run: sudo apt-get install shellcheck

      - name: Install Dependencies
        run: |
          source $HOME/.poetry/env
          poetry install

      - name: Test
        run: |
          source $HOME/.poetry/env
          sh tasks/test.sh

      - name: Report Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/master'
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Python Setup
        uses: actions/setup-python@v1
        with:
          python-version: "3.x"

      - name: Install poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - name: Install Dependencies
        run: |
          source $HOME/.poetry/env
          poetry install --no-dev

      - name: Build
        run: |
          source $HOME/.poetry/env
          poetry build

      - name: Publish to Test PyPI
        run: |
          source $HOME/.poetry/env
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }} -r testpypi

      - name: Publish to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        run: |
          source $HOME/.poetry/env
          poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
